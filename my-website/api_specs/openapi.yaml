openapi: 3.0.1
info:
  title: API мобильного приложения
  version: 1.0.0
  description: API для мобильного приложения, включающего управление бюджетом, обучение, аналитику и уведомления.

servers:
  - url: https://api.example.com

tags:
  - name: auth
    description: "Методы работы с авторизацией"
  - name: notifications
    description: "Методы работы с уведомлениями"
  - name: budget
    description: "Методы работы с бюджетом"
  - name: dashboards
    description: "Методы работы с курсами"
  - name: transactions
    description: "Методы работы с транзакциями"

paths:
  /auth/register:
    post:
      tags:
          - auth
      summary: Регистрация нового пользователя
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                username:
                  type: string
      responses:
        '201':
          description: Успешная регистрация
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    example: "user-123"
                  message:
                    type: string
                    example: "successfullн"
        '400':
          description: Неверный запрос
        '500':
          description: Внутренняя ошибка сервера

  /auth/login:
    post:
      tags:
          - auth
      summary: Авторизация пользователя
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "token-xyz"
                  userId:
                    type: string
                    example: "user-123"
        '401':
          description: Неверный логин или пароль
        '500':
          description: Внутренняя ошибка сервера

  /auth/refresh:
    post:
      tags:
          - auth
      summary: Обновление токена
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: Обновлённый токен
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "new-token-xyz"
        '400':
          description: Ошибка на стороне клиента
        '500':
          description: Ошибка на стороне сервера

  /auth/login/reset-password:
    post:
      tags:
          - auth
      summary: Сброс пароля
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Инструкции для сброса пароля отправлены
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Password reset instructions sent to your email"
        '404':
          description: Пользователь не найден
        '500':
          description: Внутренняя ошибка сервера

  /notifications:
    get:
      tags:
        - notifications
      summary: Получение уведомлений пользователя
      description: Возвращает список уведомлений для текущего пользователя.
      responses:
        '200':
          description: Список уведомлений
          content:
            application/json:
              schema:
                type: object
                properties:
                  notifications:
                    type: array
                    items:
                      $ref: '#/components/schemas/Notification'
        '400':
          description: Неверный запрос
        '500':
          description: Внутренняя ошибка сервера

  /notifications/{notificationId}:
    delete:
      tags:
        - notifications
      summary: Удаление уведомления
      parameters:
        - name: notificationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Уведомление удалено
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Notification deleted"
        '400':
          description: Ошибка на стороне клиента
        '500':
          description: Ошибка на стороне сервера

  /dashboard/summary:
    get:
      tags: 
        - dashboards
      summary: Сводка дашборда
      responses:
        '200':
          description: Данные сводки дашборда
          content:
            application/json:
              schema:
                type: object
                properties:
                  recommendedCourses:
                    type: array
                    items:
                      type: object
                      properties:
                        courseId:
                          type: string
                        title:
                          type: string
                        progress:
                          type: integer
                          minimum: 0
                          maximum: 100
                        description:
                          type: string
                  notifications:
                    type: array
                    items:
                      $ref: '#/components/schemas/Notification'

  /courses:
    get:
      tags: 
        - dashboards
      summary: Получение списка доступных курсов
      responses:
        '200':
          description: Список курсов
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    courseId:
                      type: string
                    title:
                      type: string
                    progress:
                      type: integer
                    description:
                      type: string

  /courses/{courseId}/complete:
    post:
      tags: 
        - dashboards
      summary: Отметка курса как завершённого
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Курс завершён
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Курс отмечен как завершенный"

  /courses/{courseId}/progress:
    get:
      tags: 
        - dashboards
      summary: Получение прогресса по курсу
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Прогресс по курсу
          content:
            application/json:
              schema:
                type: object
                properties:
                  courseId:
                    type: string
                  progress:
                    type: integer
                    description: Процент завершения курса

  /courses/{courseId}/start:
    post:
      tags: 
        - dashboards
      summary: Начать курс
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Курс начат
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Курс начат"

  /budgets:
    post:
      tags: 
        - budget
      summary: Создание нового бюджета
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                  enum: [personal, shared, household]
                amount:
                  type: number
                  format: float
      responses:
        201:
          description: Бюджет успешно создан
          content:
            application/json:
              schema:
                type: object
                properties:
                  budgetId:
                    type: string

  /budgets/{budgetId}:
    get:
      tags: 
        - budget
      summary: Получение данных о бюджете
      parameters:
        - name: budgetId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Данные о бюджете
          content:
            application/json:
              schema:
                type: object
                properties:
                  budgetId:
                    type: string
                  category:
                    type: string
                  amount:
                    type: number
                    format: float

  /budgets/{budgetId}/invite:
    post:
      tags: 
        - budget
      summary: Приглашение пользователей в совместный бюджет
      parameters:
        - name: budgetId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userEmails:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Приглашение отправлено
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Invitation sent successfully"

  /analytics:
    get:
      tags:
        - analytics
      summary: Получение аналитических данных
      responses:
        '200':
          description: Данные аналитики
          content:
            application/json:
              schema:
                type: object
                properties:
                  incomeTrends:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        amount:
                          type: number
                          format: float
                  expenseTrends:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        amount:
                          type: number
                          format: float
                          
  /analytics/reports/{reportId}:
    get:
      tags:
        - analytics
      summary: Получение отчета по идентификатору
      parameters:
        - name: reportId
          in: path
          required: true
          schema:
            type: string
            example: "report-123"
      responses:
        '200':
          description: Отчет успешно получен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsReport'
        '404':
          description: Отчет не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          
  /transactions:
    get:
      tags:
        - transactions
      summary: Получение списка транзакций
      responses:
        '200':
          description: Список транзакций
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    date:
                      type: string
                      format: date-time
                    category:
                      type: string
                    amount:
                      type: number
                      format: float

  /transactions/add:
    post:
      tags:
        - transactions
      summary: Добавление новой транзакции
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
      responses:
        '201':
          description: Транзакция успешно добавлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Notification:
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентификатор уведомления
          example: "notif-123"
        type:
          type: string
          enum: [alert, reminder, update]
          description: Тип уведомления
          example: "alert"
        message:
          type: string
          description: Текст уведомления
          example: "Ваш отчет готов."
        date:
          type: string
          format: date-time
          description: Дата уведомления
          example: "2024-11-16T14:12:00Z"

    TransactionRequest:
      type: object
      properties:
        category:
          type: string
          description: Категория транзакции
          example: "Food"
        amount:
          type: number
          format: float
          description: Сумма транзакции
          example: 150.75
        date:
          type: string
          format: date
          description: Дата транзакции
          example: "2024-11-16"

    TransactionResponse:
      type: object
      properties:
        transactionId:
          type: string
          description: Уникальный идентификатор транзакции
          example: "trans-456"
        message:
          type: string
          description: Подтверждение успешного добавления
          example: "Transaction added successfully"

    AnalyticsReport:
      type: object
      properties:
        reportId:
          type: string
          description: Уникальный идентификатор отчета
          example: "report-123"
        trends:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
                description: Дата
                example: "2024-11-01"
              value:
                type: number
                format: float
                description: Значение
                example: 500.00

    ErrorResponse:
      type: object
      properties:
        errorCode:
          type: string
          description: Код ошибки
          example: "400_BAD_REQUEST"
        errorMessage:
          type: string
          description: Сообщение об ошибке
          example: "Неверный запрос"
